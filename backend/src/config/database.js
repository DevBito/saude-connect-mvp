const { Pool } = require('pg')
const dotenv = require('dotenv')

dotenv.config()

// Fun√ß√£o para for√ßar SSL desabilitado na URL
const getDatabaseUrl = () => {
  // USAR APENAS SAUDE_POSTGRES_URL_NON_POOLING (FUNCIONOU!)
  if (!process.env.SAUDE_POSTGRES_URL_NON_POOLING) {
    console.log('‚ùå SAUDE_POSTGRES_URL_NON_POOLING n√£o configurada');
    return null;
  }
  
  let databaseUrl = process.env.SAUDE_POSTGRES_URL_NON_POOLING;
  console.log('‚úÖ Usando SAUDE_POSTGRES_URL_NON_POOLING (FUNCIONOU!)');
  
  // FOR√áAR SSL DESABILITADO NA URL
  console.log('üîß FOR√áANDO SSL DESABILITADO NA URL...');
  
  // Remover TODOS os par√¢metros SSL existentes
  databaseUrl = databaseUrl.replace(/[?&]sslmode=[^&]*/g, '');
  databaseUrl = databaseUrl.replace(/[?&]ssl=[^&]*/g, '');
  databaseUrl = databaseUrl.replace(/[?&]sslcert=[^&]*/g, '');
  databaseUrl = databaseUrl.replace(/[?&]sslkey=[^&]*/g, '');
  databaseUrl = databaseUrl.replace(/[?&]sslrootcert=[^&]*/g, '');
  
  // Adicionar sslmode=disable FOR√áADAMENTE
  if (databaseUrl.includes('?')) {
    databaseUrl += '&sslmode=disable';
  } else {
    databaseUrl += '?sslmode=disable';
  }
  
  console.log('‚úÖ URL FINAL COM SSL FOR√áADAMENTE DESABILITADO');
  return databaseUrl;
}

const pool = new Pool({
  connectionString: getDatabaseUrl(),
  ssl: false,
  max: 5, // REDUZIDO: M√°ximo 5 conex√µes simult√¢neas
  min: 1, // M√≠nimo 1 conex√£o
  idleTimeoutMillis: 10000, // REDUZIDO: 10 segundos
  connectionTimeoutMillis: 5000, // AUMENTADO: 5 segundos
  acquireTimeoutMillis: 10000, // Timeout para adquirir conex√£o
  allowExitOnIdle: true, // Permitir sa√≠da quando idle
})

// Test database connection
pool.on('connect', () => {
  console.log('‚úÖ Conectado ao banco de dados PostgreSQL')
})

pool.on('error', (err) => {
  console.error('‚ùå Erro na conex√£o com o banco de dados:', err)
  process.exit(-1)
})

module.exports = pool
